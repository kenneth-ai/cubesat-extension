{"entries":[{"timestamp":1741332138957,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" id=\"yC0rI~xX=={D6MeCu[id\" x=\"20\" y=\"20"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start"],[0,"\"></"]],"start1":12,"start2":12,"length1":135,"length2":62},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," id=\"swfO6)@o-G@IHykflz)R\" x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":49,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//% color=#0fbc11\"\nnamespace CubeSat {\n    let MyAddr = {\n        ADDR: 0x76\n    };\n\n    let BME280_I2C_ADDRESS = {\n        ADDR_0x76: 0x76\n    };\n\n    let MyType = {\n        STANDARD: 0\n    };\n\n    let MyEnum = {\n        PM1_0: 0,\n        PM2_5: 1\n    };\n\n    //% blockId=start_connect block=\"Start Connect\"\n    export function startConnect(): void {\n        serial.redirect(SerialPin.P14, SerialPin.P15, BaudRate.BaudRate115200);\n        custom.setAddr(MyAddr.ADDR);\n        BME280.Address(BME280_I2C_ADDRESS.ADDR_0x76);\n        OLED12864_I2C.init(60);\n    }\n\n    //% blockId=get_pm10 block=\"Get PM1.0 at height %displayHeight\"\n    export function getPM10(displayHeight: number): void {\n        OLED12864_I2C.showString(0, displayHeight - 1, \"PM 1.0 : \", 1);\n        OLED12864_I2C.showNumber(70, displayHeight - 1, custom.gainParticleConcentration_ugm3(MyType.STANDARD, MyEnum.PM1_0), 1);\n        basic.pause(100);\n    }\n\n    //% blockId=i2c_write block=\"Write sensor data to serial\"\n    export function i2cWrite(): void {\n        serial.writeLine(\"101\");\n        serial.writeString(`${Environment.dht11value(Environment.DHT11Type.DHT11_temperature_C, DigitalPin.P2)},`);\n        serial.writeString(`${Environment.dht11value(Environment.DHT11Type.DHT11_humidity, DigitalPin.P2)},`);\n        serial.writeString(`${Math.round(pins.analogReadPin(AnalogReadWritePin.P1) / 10)},`);\n        serial.writeString(`${input.compassHeading()},`);\n        serial.writeString(`${input.lightLevel()},`);\n        serial.writeString(`${custom.gainParticleConcentration_ugm3(MyType.STANDARD, MyEnum.PM2_5)},`);\n        serial.writeString(\"102\");\n    }\n\n    //% blockId=get_gas block=\"Get Gas at height %displayHeight\"\n    export function getGas(displayHeight: number): void {\n        OLED12864_I2C.showString(0, displayHeight - 1, \"Gas : \", 1);\n        OLED12864_I2C.showNumber(70, displayHeight - 1, pins.analogReadPin(AnalogReadWritePin.P1), 1);\n        basic.pause(100);\n    }\n\n    //% blockId=get_temp block=\"Get Temperature at height %displayHeight\"\n    export function getTemp(displayHeight: number): void {\n        OLED12864_I2C.showString(0, displayHeight - 1, \"Temp : \", 1);\n        OLED12864_I2C.showNumber(70, displayHeight - 1, Environment.dht11value(Environment.DHT11Type.DHT11_temperature_C, DigitalPin.P2), 1);\n        basic.pause(100);\n    }\n\n    //% blockId=get_pm25 block=\"Get PM2.5 at height %displayHeight\"\n    export function getPM25(displayHeight: number): void {\n        OLED12864_I2C.showString(0, displayHeight - 1, \"PM 2.5 : \", 1);\n        OLED12864_I2C.showNumber(70, displayHeight - 1, custom.gainParticleConcentration_ugm3(MyType.STANDARD, MyEnum.PM2_5), 1);\n        basic.pause(100);\n    }\n\n    //% blockId=get_hum block=\"Get Humidity at height %displayHeight\"\n    export function getHum(displayHeight: number): void {\n        OLED12864_I2C.showString(0, displayHeight - 1, \"Hum : \", 1);\n        OLED12864_I2C.showNumber(70, displayHeight - 1, Environment.dht11value(Environment.DHT11Type.DHT11_humidity, DigitalPin.P2), 1);\n        basic.pause(100);\n    }\n}"],[1,"\n"]],"start1":0,"start2":0,"length1":3072,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"besat Ex"],[-1,"te"],[1,"sta"],[0,"nsion\",\n"]],"start1":17,"start2":17,"length1":18,"length2":19},{"diffs":[[0," \"*\""],[-1,",\n        \"Cubesat v2.1\": \"pub:12245-73832-65226-21804\""],[0,"\n   "]],"start1":145,"start2":145,"length1":63,"length2":8},{"diffs":[[0,"   \""],[-1,"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":242,"start2":242,"length1":76,"length2":31}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1741332138956,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Cubesat Exstansion\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1741332317649}